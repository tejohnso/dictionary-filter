defaults: &defaults
  working_directory: ~/workspace
  docker:
    - image: snapcore/snapcraft

version: 2
jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Verify required tags and changelog update
          command: |
            git tag --contains |grep [0-9]\\.[0-9]\\.[0-9]
            git tag --contains |grep edge || git tag --contains |grep stable
            git diff HEAD^1 HEAD --stat --name-only |grep ^CHANGELOG.md$

      - run:
          name: Set version
          command: git tag --contains |grep [0-9]\\.[0-9]\\.[0-9] |tr -d "\n" > VERSION

      - run:
          name: Build snap
          command: |
            echo "Building version $(cat VERSION)"
            sed -i "s/VERSION/$(cat VERSION)/g" snap/snapcraft.yaml
            snapcraft

      - persist_to_workspace:
          root: ~/workspace
          paths: ['*.snap', 'VERSION']

  release:
    <<: *defaults
    steps:
      - checkout

      - attach_workspace:
          at: ~/workspace

      - run:
          name: Load credentials
          command: |
            echo $UBUNTU_ONE_CRED |base64 -d >credentials

      - run:
          name: Authenticate snapcraft
          command: snapcraft login --with credentials

      - run:
          name: Create github release
          command: |
            curl -vv -H "content-type: application/json" --data-binary '{"tag_name":"$(cat VERSION)"}' -u tejohnso:$GITHUB_TOKEN https://api.github.com/repos/tejohnso/dictionary-filter/releases

      - run:
          name: Push/release snap
          command: |
            set +e
            git tag --contains |grep edge && snapcraft push *.snap --release edge
            git tag --contains |grep stable && snapcraft push *.snap --release stable

      - run:
          name: Update AUR
          command: |
            cd /tmp
            git clone ssh://aur@aur.archlinux.org/fdic.git
            cd fdic
            sed -i "s/[0-9]\.[0-9]\.[0-9]/$(cat ~/workspace/VERSION)/g" .SRCINFO
            sed -i "s/pkgver=.*/pkgver=$(cat ~/workspace/VERSION)/" PKGBUILD
            git add .
            git commit -m $(cat ~/workspace/VERSION)
            git push

workflows:
  version: 2
  workflow:
    jobs:
      - build:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /stage|edge/
      - release:
          requires: [build]
